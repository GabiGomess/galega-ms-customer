plugins {
	id 'java'
	id 'jacoco'
	id 'org.springframework.boot' version '3.2.5'
	id 'io.spring.dependency-management' version '1.1.4'
	id 'io.swagger.core.v3.swagger-gradle-plugin' version '2.2.21'
}

group = 'com.galega'
version = '0.0.1-SNAPSHOT'

java {
    sourceCompatibility = '17'
}

jacoco {
	toolVersion = "0.8.10"
}

configurations {
	compileOnly {
		extendsFrom annotationProcessor
	}
}

repositories {
	mavenCentral()
}

dependencies {
	implementation 'org.springframework.boot:spring-boot-starter-data-jdbc'
	implementation 'org.springframework.boot:spring-boot-starter-web'
	implementation 'org.flywaydb:flyway-core'
	implementation 'org.springdoc:springdoc-openapi-starter-webmvc-ui:2.0.3'
	compileOnly 'org.projectlombok:lombok'
	runtimeOnly 'org.postgresql:postgresql'
	annotationProcessor 'org.projectlombok:lombok'
	testImplementation 'org.springframework.boot:spring-boot-starter-test'
	testImplementation 'com.squareup.okhttp3:mockwebserver:4.11.0'
}

tasks.test {
	useJUnitPlatform()
	finalizedBy(tasks.jacocoTestReport) // Garante que o relatório seja gerado após os testes
}

tasks.jacocoTestReport {
	dependsOn(tasks.test) // Garante que os testes sejam executados antes do relatório
	reports {
		xml.required.set(true) // Necessário para integração com o SonarQube/SonarCloud
		html.required.set(true) // Opcional, útil para visualizar o relatório localmente
	}
}

tasks.jacocoTestCoverageVerification {
	dependsOn(tasks.jacocoTestReport)
	violationRules {
		rule {
			limit {
				minimum = 0.80 // Configura a cobertura mínima (80% neste caso)
			}
		}
	}
}